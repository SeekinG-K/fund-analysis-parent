#spring:
#  datasource:
#    username: ENC(ncPHYMSClFexP8TEt5HlYg==)
#    password: ENC(Is2LT3vI6kcXxamc2S5Apw==)
#    url: jdbc:p6spy:mysql://127.0.0.1:3306/invest_fof?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false
#    driverClassName: com.p6spy.engine.spy.P6SpyDriver
eureka:
  client:
    #表示是否将自己注册进EurekaServer默认为true。
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetchRegistry: true
    service-url:
      #      #单机版
      defaultZone: http://localhost:7001/eureka
      # 集群版
    #defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka
  instance:
    instance-id: @project.artifactId@
    #访问路径可以显示IP地址
    prefer-ip-address: true
    #Eureka客户端向服务端发送心跳的时间间隔，单位为秒(默认是30秒)
    lease-renewal-interval-in-seconds: 8
    #Eureka服务端在收到最后一次心跳后等待时间上限，单位为秒(默认是90秒)，超时将剔除服务
    lease-expiration-duration-in-seconds: 8
feign:
  hystrix:
    enabled: true

spring:
  redis:
    host: 127.0.0.1
    password: ENC(Is2LT3vI6kcXxamc2S5Apw==)
    timeout: 30000
    database: 0
  #kafka about config
  kafka:
    bootstrap-servers: localhost:9092
    #product  config
    producer:
      acks: 1
      batch-size: 16384
      retries: 0
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
    #consumer about config#
    consumer:
      enable-auto-commit: true
      group-id: kafka_scale_0
      auto-commit-interval: 100
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    listener:
      missing-topics-fatal: false

jasypt:
  encryptor:
    password: invest

info:
  app:
    name: @project.artifactId@
  company:
    name: scale_provider
  build:
    artifactId: @project.artifactId@
    version: @project.version@

